#!/usr/bin/env bash

# This script downloads, builds and deploys a D-to-LLVM-to-ASMJS toolchain.
# Usage:
# $ ./fetch_toolchain
# A painfully long time after, you've got a full toolchain in '/tmp/toolchains/'

set -euo pipefail

readonly PREFIX_JS=/tmp/toolchains/llvm-js
readonly PREFIX_EMS=/tmp/toolchains/emscripten
readonly tmpDir=/tmp/emsd-source
readonly scriptDir=$(realpath $(dirname $0))

function main
{
  mkdir -p $tmpDir

  buildEmscripten
  buildLdc
}

# Here, we build and install:
# - vanilla LLVM (3.9)
# - ldc D2 compiler (which requires LLVM >= 3.5)
# - llvm-cbe, aka the "resurrected C backend" (which requires LLVM == 3.9)
function buildLdc
{
  if [ ! -d $tmpDir/ldc ] ; then
    git clone --recursive https://github.com/ldc-developers/ldc.git $tmpDir/ldc
    gitCheckout $tmpDir/ldc '9566fc58c800aad27b13f2c8d1f4a63b299e0e3e'
    patch -d $tmpDir/ldc -p1 -i $scriptDir/ldc.patch
  fi

  mkdir -p $tmpDir/bin/ldc
  runFrom $tmpDir/bin/ldc cmake \
    -G "Unix Makefiles" \
    -D "CMAKE_INSTALL_PREFIX=$PREFIX_JS" \
    -D "LLVM_CONFIG=$PREFIX_JS/bin/llvm-config" \
    ../../ldc
  runFrom $tmpDir/bin/ldc make -j`nproc`
  runFrom $tmpDir/bin/ldc make -j`nproc` install
}

# Here, we build and install:
# - 'fastcomp' LLVM
# - 'fastcomp' clang frontend (which requires 'fastcomp' LLVM)
# - emscripten (python wrapper scripts + header files + pkg-config files)
function buildEmscripten
{
  # emcc and other python wrappers
  if [ ! -d $PREFIX_EMS ] ; then
    git clone --depth=1 -b master --single-branch https://github.com/kripken/emscripten.git $PREFIX_EMS
    #gitCheckout $PREFIX_EMS '07b87426f898d6e9c677db291d9088c839197291'

    # fake pkg-config files to keep the build systems of user projects happy
    cp $PREFIX_EMS/system/lib/pkgconfig/sdl.pc $PREFIX_EMS/system/lib/pkgconfig/SDL_mixer.pc
    cp $PREFIX_EMS/system/lib/pkgconfig/sdl.pc $PREFIX_EMS/system/lib/pkgconfig/SDL_image.pc
    cp $PREFIX_EMS/system/lib/pkgconfig/sdl.pc $PREFIX_EMS/system/lib/pkgconfig/SDL_gfx.pc
    generateSdl2Pc > $PREFIX_EMS/system/lib/pkgconfig/sdl2.pc
  fi

  # the asmjs backend
  if [ ! -d $tmpDir/emscripten-llvm ] ; then
    git clone --depth=1 -b master --single-branch https://github.com/kripken/emscripten-fastcomp.git $tmpDir/emscripten-llvm
    gitCheckout $tmpDir/emscripten-llvm '881bd352731d21c7117ad7e2ece347aacae83965'
  fi

  # modified clang front-end (why the hell is it even necessary to modify the frontend?)
  if [ ! -d $tmpDir/emscripten-llvm/tools/clang ] ; then
    git clone --depth=1 -b master --single-branch https://github.com/kripken/emscripten-fastcomp-clang.git $tmpDir/emscripten-llvm/tools/clang
    gitCheckout $tmpDir/emscripten-llvm/tools/clang '60a7e9a9c22b67309e5b1258d38fadfa481a25d3'
  fi

  mkdir -p $tmpDir/bin/emscripten-llvm

  runFrom $tmpDir/bin/emscripten-llvm cmake \
    -G "Unix Makefiles" \
    -D "CMAKE_INSTALL_PREFIX=$PREFIX_JS" \
    -D "CMAKE_BUILD_TYPE=Release" \
    -D "LLVM_BUILD_GLOBAL_ISEL=off" \
    -D "LLVM_TARGETS_TO_BUILD=host;JSBackend" \
    -D "LLVM_ENABLE_ASSERTIONS=off" \
    -D "LLVM_ENABLE_BACKTRACES=off" \
    -D "LLVM_ENABLE_WARNINGS=off" \
    ../../emscripten-llvm

  runFrom $tmpDir/bin/emscripten-llvm make -j`nproc`
  runFrom $tmpDir/bin/emscripten-llvm make -j`nproc` install
}

function generateSdl2Pc
{
  echo "Name: sdl2"
  echo "Description: SDL2"
  echo "Version: 1.2.15"
  echo "Cflags: -s USE_SDL=2"
  echo "Libs: -s USE_SDL=2"
}

function gitCheckout
{
  local dir=$1
  local commit=$2

  runFrom $dir git fetch --depth 100
  runFrom $dir git checkout "$commit"
}

function runFrom
{
  local readonly dir=$1
  shift
  pushd $dir >/dev/null
  "$@"
  popd >/dev/null
}

main "$@"

