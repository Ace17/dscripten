#!/usr/bin/env bash

# This script downloads, builds and deploys a D-to-LLVM-to-C-to-ASMJS toolchain.
# It's a pity we have to build LLVM twice, but LDC, emscripten-fastcomp, and llvm-cbe have decided not to be compatible.
# Usage:
# $ ./fetch_toolchain
# A painfully long time after, you've to a full toolchain in '/tmp/toolchains/emsd'

set -euo pipefail

readonly PREFIX_NAT=/tmp/toolchains/llvm-native
readonly PREFIX_JS=/tmp/toolchains/llvm-js
readonly PREFIX_EMS=/tmp/toolchains/emscripten
readonly tmpDir=/tmp/emsd-source

function main
{
  mkdir -p $tmpDir

  buildEmscripten
  buildLdc
}

# Here, we build and install:
# - vanilla LLVM (3.8)
# - ldc D2 compiler (which requires LLVM >= 3.5)
# - llvm-cbe, aka the "resurrected C backend" (which requires LLVM == 3.8)
function buildLdc
{
  if [ ! -d $tmpDir/ldc ] ; then
    git clone --recursive https://github.com/ldc-developers/ldc.git $tmpDir/ldc
    # runFrom $tmpDir/ldc git checkout 'be63398346f395814ddc73546e66821888c2fffd'
  fi

  if [ ! -d $tmpDir/llvm ] ; then
    git clone --depth=1 -b release_38 --single-branch https://github.com/llvm-mirror/llvm.git $tmpDir/llvm
    # runFrom $tmpDir/llvm git checkout '33c352b3eda89abc24e7511d9045fa2e499a42e3'
  fi

  if [ ! -d $tmpDir/llvm/projects/llvm-cbe ] ; then
    git clone --depth=1 -b standalone --single-branch https://github.com/Ace17/llvm-cbe.git $tmpDir/llvm/projects/llvm-cbe
    # runFrom $tmpDir/llvm/projects/llvm-cbe 'fa6d68e7ee3e9219ced0fa95de687c4c6632ddda'
  fi

  mkdir -p $tmpDir/bin/llvm
  runFrom $tmpDir/bin/llvm ../../llvm/configure --enable-targets=host --disable-timestamps --disable-jit --enable-optimized --disable-assertions --enable-bindings=none --prefix=$PREFIX_NAT
  runFrom $tmpDir/bin/llvm make -j`nproc`
  runFrom $tmpDir/bin/llvm make -j`nproc` install
  cp $tmpDir/bin/llvm/Release/bin/llvm-cbe $PREFIX_NAT/bin

  mkdir -p $tmpDir/bin/ldc
  runFrom $tmpDir/bin/ldc cmake -G "Unix Makefiles" -D "LLVM_CONFIG=$PREFIX_NAT/bin/llvm-config" -D "CMAKE_INSTALL_PREFIX=$PREFIX_NAT" ../../ldc
  runFrom $tmpDir/bin/ldc make -j`nproc`
  runFrom $tmpDir/bin/ldc make -j`nproc` install
}

# Here, we build and install:
# - 'fastcomp' LLVM
# - 'fastcomp' clang fronted (which requires 'fastcomp' LLVM)
# - emscripten (python wrapper scripts)
function buildEmscripten
{
  # emcc and other python wrappers
  if [ ! -d $PREFIX_EMS ] ; then
    git clone --depth=1 -b master --single-branch https://github.com/kripken/emscripten.git $PREFIX_EMS
    # runFrom $PREFIX_EMS git checkout '07b87426f898d6e9c677db291d9088c839197291'
  fi

  # the asmjs backend
  if [ ! -d $tmpDir/emscripten-llvm ] ; then
    git clone --depth=1 -b master --single-branch https://github.com/kripken/emscripten-fastcomp.git $tmpDir/emscripten-llvm
    # runFrom $tmpDir/emscripten-llvm git checkout '61acfb230665464544f2e8db292f8999fc3c628c'
  fi

  # modified clang front-end (why the hell is it even necessary to modify the frontend?)
  if [ ! -d $tmpDir/emscripten-llvm/tools/clang ] ; then
    git clone --depth=1 -b master --single-branch https://github.com/kripken/emscripten-fastcomp-clang.git $tmpDir/emscripten-llvm/tools/clang
    # runFrom $tmpDir/emscripten-llvm/tools/clang git checkout '271ce598c3d1fe74efadc254f5be1b57edea9f41'
  fi

  mkdir -p $tmpDir/bin/emscripten-llvm
  runFrom $tmpDir/bin/emscripten-llvm ../../emscripten-llvm/configure --enable-targets=host,js --disable-timestamps --disable-jit --enable-optimized --disable-assertions --enable-bindings=none --disable-docs --prefix=$PREFIX_JS
  runFrom $tmpDir/bin/emscripten-llvm make -j`nproc`
  runFrom $tmpDir/bin/emscripten-llvm make -j`nproc` install
}

function runFrom
{
  local readonly dir=$1
  shift
  pushd $dir >/dev/null
  "$@"
  popd >/dev/null
}

main "$@"

