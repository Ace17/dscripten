diff --git a/CMakeLists.txt b/CMakeLists.txt
index c47d5b64..54235e10 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -883,7 +883,7 @@ add_subdirectory(utils)
 #
 # Auxiliary tools.
 #
-add_subdirectory(tools)
+#add_subdirectory(tools)
 
 #
 # Test and runtime targets. Note that enable_testing() is order-sensitive!
@@ -941,19 +941,6 @@ if(MSVC)
     install(DIRECTORY vcbuild/ DESTINATION ${CMAKE_INSTALL_PREFIX}/bin FILES_MATCHING PATTERN "*.bat")
 endif()
 
-if(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
-    if(NOT DEFINED BASH_COMPLETION_COMPLETIONSDIR)
-        find_package(bash-completion QUIET)
-        if((NOT BASH_COMPLETION_FOUND) OR (NOT BASH_COMPLETION_PREFIX STREQUAL CMAKE_INSTALL_PREFIX))
-            set(BASH_COMPLETION_COMPLETIONSDIR "${CONF_INST_DIR}/bash_completion.d")
-            if(LINUX_DISTRIBUTION_IS_GENTOO AND CMAKE_INSTALL_PREFIX STREQUAL "/usr")
-                set(BASH_COMPLETION_COMPLETIONSDIR "/usr/share/bash-completion")
-            endif()
-        endif()
-    endif()
-    install(DIRECTORY bash_completion.d/ DESTINATION ${BASH_COMPLETION_COMPLETIONSDIR})
-endif()
-
 #
 # Packaging
 #
diff --git a/driver/main.cpp b/driver/main.cpp
index aeec5d60..485d4379 100644
--- a/driver/main.cpp
+++ b/driver/main.cpp
@@ -124,7 +124,7 @@ void printVersion(llvm::raw_ostream &OS) {
   OS.flush();
 
   llvm::TargetRegistry::printRegisteredTargetsForVersion(
-#if LDC_LLVM_VER >= 600
+#if LDC_LLVM_VER >= 600 || 1
       OS
 #endif
   );
@@ -312,7 +312,7 @@ void parseCommandLine(int argc, char **argv, Strings &sourceFiles,
   // finalize by expanding response files specified in config file
   expandResponseFiles(allocator, allArguments);
 
-#if LDC_LLVM_VER >= 600
+#if LDC_LLVM_VER >= 600 || 1
   cl::SetVersionPrinter(&printVersion);
 #else
   cl::SetVersionPrinter(&printVersionStdout);
@@ -731,6 +731,8 @@ void registerPredefinedTargetVersions() {
     VersionCondition::addPredefinedGlobalIdent("NVPTX");
     VersionCondition::addPredefinedGlobalIdent("D_HardFloat");
     break;
+  case llvm::Triple::asmjs:
+    break;
   case llvm::Triple::nvptx64:
     VersionCondition::addPredefinedGlobalIdent("NVPTX64");
     VersionCondition::addPredefinedGlobalIdent("D_HardFloat");
@@ -842,6 +844,8 @@ void registerPredefinedTargetVersions() {
     VersionCondition::addPredefinedGlobalIdent("NetBSD");
     VersionCondition::addPredefinedGlobalIdent("Posix");
     break;
+  case llvm::Triple::Emscripten:
+    break;
   case llvm::Triple::OpenBSD:
     VersionCondition::addPredefinedGlobalIdent("OpenBSD");
     VersionCondition::addPredefinedGlobalIdent("Posix");
