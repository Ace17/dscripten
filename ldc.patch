diff --git a/CMakeLists.txt b/CMakeLists.txt
index 1bf26399..fbf1b18d 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -881,7 +881,7 @@ add_subdirectory(utils)
 #
 # Auxiliary tools.
 #
-add_subdirectory(tools)
+#add_subdirectory(tools)
 
 #
 # Test and runtime targets. Note that enable_testing() is order-sensitive!
@@ -946,7 +946,7 @@ if(MSVC)
     install(DIRECTORY vcbuild/ DESTINATION ${CMAKE_INSTALL_PREFIX}/bin FILES_MATCHING PATTERN "*.bat")
 endif()
 
-if(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
+if(${CMAKE_SYSTEM_NAME} MATCHES "Don't install completion: installation is flaky and we don't use this anyway")
     if(NOT DEFINED BASH_COMPLETION_COMPLETIONSDIR)
         find_package(bash-completion QUIET)
         if((NOT BASH_COMPLETION_FOUND) OR (NOT BASH_COMPLETION_PREFIX STREQUAL CMAKE_INSTALL_PREFIX))
diff --git a/driver/main.cpp b/driver/main.cpp
index 459ed019..63446a5b 100644
--- a/driver/main.cpp
+++ b/driver/main.cpp
@@ -125,7 +125,7 @@ void printVersion(llvm::raw_ostream &OS) {
   OS.flush();
 
   llvm::TargetRegistry::printRegisteredTargetsForVersion(
-#if LDC_LLVM_VER >= 600
+#if LDC_LLVM_VER >= 600 || 1
       OS
 #endif
   );
@@ -333,7 +333,7 @@ void parseCommandLine(int argc, char **argv, Strings &sourceFiles,
   // finalize by expanding response files specified in config file
   expandResponseFiles(allocator, allArguments);
 
-#if LDC_LLVM_VER >= 600
+#if LDC_LLVM_VER >= 600 || 1
   cl::SetVersionPrinter(&printVersion);
 #else
   cl::SetVersionPrinter(&printVersionStdout);
@@ -757,6 +757,8 @@ void registerPredefinedTargetVersions() {
     VersionCondition::addPredefinedGlobalIdent("NVPTX");
     VersionCondition::addPredefinedGlobalIdent("D_HardFloat");
     break;
+  case llvm::Triple::asmjs:
+    break;
   case llvm::Triple::nvptx64:
     VersionCondition::addPredefinedGlobalIdent("NVPTX64");
     VersionCondition::addPredefinedGlobalIdent("D_HardFloat");
@@ -874,6 +876,8 @@ void registerPredefinedTargetVersions() {
     VersionCondition::addPredefinedGlobalIdent("NetBSD");
     VersionCondition::addPredefinedGlobalIdent("Posix");
     break;
+  case llvm::Triple::Emscripten:
+    break;
   case llvm::Triple::OpenBSD:
     VersionCondition::addPredefinedGlobalIdent("OpenBSD");
     VersionCondition::addPredefinedGlobalIdent("Posix");
